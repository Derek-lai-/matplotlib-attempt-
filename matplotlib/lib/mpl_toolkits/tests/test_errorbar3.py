from mpl_toolkits.mplot3d import axes3d
import matplotlib.pyplot as plt
import numpy as np
from matplotlib import cbook
iterable = cbook.iterable

from nose.tools import raises

# for 'currying'
import functools
import operator


def assert_errors_equal(x, y, z, xerr, yerr, zerr, err, step=1):
    '''
    Assert that the error bars returned by the error bar function is
    equal to the values they should be

    Constructs lists to match the output generated by errorbar
    '''
    i_array = 0
    idx = 0
    if xerr is not None:
        if not iterable(xerr):
            xerr = [xerr] * len(x)

        xlines = err[2][idx]._segments3d
        for i, line in enumerate(xlines):
            # 2xN
            if len(xerr) == 2 and iterable(xerr[0]) and iterable(xerr[1]):
                l = xerr[0][i]
                r = xerr[1][i]
            else:
                l = r = xerr[i]
            assert(
                np.allclose(line[0], [x[i_array] - l, y[i_array], z[i_array]]))
            assert(
                np.allclose(line[1], [x[i_array] + r, y[i_array], z[i_array]]))
            i_array = i_array + step
        idx = idx + 1

    i_array = 0
    if yerr is not None:
        if not iterable(yerr):
            yerr = [yerr] * len(y)

        ylines = err[2][idx]._segments3d
        for i, line in enumerate(ylines):
            # 2xN would produce
            if len(yerr) == 2 and iterable(yerr[0]) and iterable(yerr[1]):
                l = yerr[0][i]
                r = yerr[1][i]
            else:
                l = r = yerr[i]
            assert(
                np.allclose(line[0], [x[i_array], y[i_array] - l, z[i_array]]))
            assert(
                np.allclose(line[1], [x[i_array], y[i_array] + r, z[i_array]]))
            i_array = i_array + step
        idx = idx + 1

    i_array = 0
    if zerr is not None:
        if not iterable(zerr):
            zerr = [zerr] * len(z)

        zlines = err[2][idx]._segments3d
        for i, line in enumerate(zlines):
            if len(zerr) == 2 and iterable(zerr[0]) and iterable(zerr[1]):
                l = zerr[0][i]
                r = zerr[1][i]
            else:
                l = r = zerr[i]
            assert(
                np.allclose(line[0], [x[i_array], y[i_array], z[i_array] - l]))
            assert(
                np.allclose(line[1], [x[i_array], y[i_array], z[i_array] + r]))
            i_array = i_array + step
        idx = idx + 1

# setup the axis

# make a "singleton" axis
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

'''
Testing x error bars
'''


def test_errorbar_xerr_none():
    xs = ys = zs = np.arange(5)
    xerr = None
    yerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, xerr=xerr, yerr=yerr,
                      zerr=zerr, errorevery=1)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


@raises(ValueError)
def test_errorbar_xerr_none_fail():
    xs = ys = zs = np.arange(5)
    xerr = [None]
    yerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, xerr=xerr, yerr=yerr,
                      zerr=zerr, errorevery=1)


def test_errorbar_xerr_none2():
    xs = ys = zs = np.arange(4)
    xerr = None
    yerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, xerr=xerr, yerr=yerr,
                      zerr=zerr, errorevery=3)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err, 3)


def test_errorbar_xerr_notnone():
    xs = ys = zs = np.arange(7)
    xerr = 1
    yerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, xerr=xerr, yerr=yerr,
                      zerr=zerr, errorevery=1)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


@raises(ValueError)
def test_errorbar_xerr_notnone_fail():
    xs = ys = zs = np.arange(7)
    xerr = [1]
    yerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, xerr=xerr, yerr=yerr,
                      zerr=zerr, errorevery=1)


def test_errorbar_xerr_2xN():
    xs = ys = zs = np.arange(8)
    xerr_1 = map(functools.partial(operator.add, -11), xs)
    xerr_2 = map(functools.partial(operator.add, 1), xs)
    xerr = [xerr_1, xerr_2]
    yerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, xerr=xerr, yerr=yerr,
                      zerr=zerr, errorevery=1)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


@raises(ValueError)
def test_errorbar_xerr_2xN_fail1():
    xs = ys = zs = np.arange(8)
    xerr = [[1], [2], [3]]
    yerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, xerr=xerr, yerr=yerr,
                      zerr=zerr, errorevery=1)


def test_errorbar_xerr_capsize_gt0():
    xs = ys = zs = np.arange(3)
    xerr_1 = map(functools.partial(operator.sub, 1), xs)
    xerr_2 = map(functools.partial(operator.add, 1), xs)
    xerr = [xerr_1, xerr_2]
    yerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, xerr=xerr, yerr=yerr,
                      zerr=zerr, errorevery=1, capsize=1)
    assert(True)


def test_errorbar_xerr_capsize_eq0():
    xs = ys = zs = np.arange(3)
    xerr_1 = map(functools.partial(operator.sub, 1), xs)
    xerr_2 = map(functools.partial(operator.add, 1), xs)
    xerr = [xerr_1, xerr_2]
    yerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, xerr=xerr, yerr=yerr,
                      zerr=zerr, errorevery=1, capsize=0)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


def test_errorbar_xerr_capsize_lt0():
    xs = ys = zs = np.arange(3)
    xerr_1 = map(functools.partial(operator.sub, 1), xs)
    xerr_2 = map(functools.partial(operator.add, 1), xs)
    xerr = [xerr_1, xerr_2]
    yerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, xerr=xerr, yerr=yerr,
                      zerr=zerr, errorevery=1, capsize=-1)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


def test_errorbar_xerr_capsize_xlolims():
    xs = ys = zs = np.arange(16)
    xerr_1 = map(functools.partial(operator.sub, 1), xs)
    xerr_2 = map(functools.partial(operator.add, 2), xs)
    xerr = [xerr_1, xerr_2]
    yerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, xerr=xerr, yerr=yerr,
                      zerr=zerr, errorevery=1, capsize=4, xlolims=True)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


def test_errorbar_xerr_capsize_xuplims():
    xs = ys = zs = np.arange(14)
    xerr_1 = map(functools.partial(operator.sub, 3), xs)
    xerr_2 = map(functools.partial(operator.add, 1), xs)
    xerr = [xerr_1, xerr_2]
    yerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, xerr=xerr, yerr=yerr,
                      zerr=zerr, errorevery=1, capsize=4, xuplims=True)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


'''
Testing y error bars
'''


def test_errorbar_yerr_none():
    xs = ys = zs = np.arange(5)
    yerr = None
    xerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


@raises(ValueError)
def test_errorbar_yerr_none_fail():
    xs = ys = zs = np.arange(5)
    yerr = [None]
    xerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1)


def test_errorbar_yerr_none2():
    xs = ys = zs = np.arange(4)
    yerr = None
    xerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=3)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err, 3)


def test_errorbar_yerr_notnone():
    xs = ys = zs = np.arange(7)
    yerr = 1
    xerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


@raises(ValueError)
def test_errorbar_yerr_notnone_fail():
    xs = ys = zs = np.arange(7)
    yerr = [1]
    xerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1)


def test_errorbar_yerr_2xN():
    xs = ys = zs = np.arange(8)
    yerr_1 = map(functools.partial(operator.add, -11), xs)
    yerr_2 = map(functools.partial(operator.add, 1), xs)
    yerr = [yerr_1, yerr_2]
    xerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


@raises(ValueError)
def test_errorbar_yerr_2xN_fail1():
    xs = ys = zs = np.arange(8)
    yerr = [[1], [2], [3]]
    xerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1)


def test_errorbar_yerr_capsize_gt0():
    xs = ys = zs = np.arange(3)
    yerr_1 = map(functools.partial(operator.sub, 1), xs)
    yerr_2 = map(functools.partial(operator.add, 1), xs)
    yerr = [yerr_1, yerr_2]
    xerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1, capsize=1)
    assert(True)


def test_errorbar_yerr_capsize_eq0():
    xs = ys = zs = np.arange(3)
    yerr_1 = map(functools.partial(operator.sub, 1), xs)
    yerr_2 = map(functools.partial(operator.add, 1), xs)
    yerr = [yerr_1, yerr_2]
    xerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1, capsize=0)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


def test_errorbar_yerr_capsize_lt0():
    xs = ys = zs = np.arange(3)
    yerr_1 = map(functools.partial(operator.sub, 1), xs)
    yerr_2 = map(functools.partial(operator.add, 1), xs)
    yerr = [yerr_1, yerr_2]
    xerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1, capsize=-1)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


def test_errorbar_yerr_capsize_ylolims():
    xs = ys = zs = np.arange(16)
    yerr_1 = map(functools.partial(operator.sub, 1), xs)
    yerr_2 = map(functools.partial(operator.add, 2), xs)
    yerr = [yerr_1, yerr_2]
    xerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1, capsize=4, ylolims=True)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


def test_errorbar_yerr_capsize_yuplims():
    xs = ys = zs = np.arange(14)
    yerr_1 = map(functools.partial(operator.sub, 3), xs)
    yerr_2 = map(functools.partial(operator.add, 1), xs)
    yerr = [yerr_1, yerr_2]
    xerr = 1
    zerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1, capsize=4, yuplims=True)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)

'''
Testing z error bars
'''


def test_errorbar_zerr_none():
    xs = ys = zs = np.arange(5)
    zerr = None
    xerr = 1
    yerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


@raises(ValueError)
def test_errorbar_zerr_none_fail():
    xs = ys = zs = np.arange(5)
    zerr = [None]
    xerr = 1
    yerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1)


def test_errorbar_zerr_none2():
    xs = ys = zs = np.arange(4)
    zerr = None
    xerr = 1
    yerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=3)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err, 3)


def test_errorbar_zerr_notnone():
    xs = ys = zs = np.arange(7)
    zerr = 1
    xerr = 1
    yerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


@raises(ValueError)
def test_errorbar_zerr_notnone_fail():
    xs = ys = zs = np.arange(7)
    zerr = [1]
    xerr = 1
    yerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1)


def test_errorbar_zerr_2xN():
    xs = ys = zs = np.arange(8)
    zerr_1 = map(functools.partial(operator.add, -11), xs)
    zerr_2 = map(functools.partial(operator.add, 1), xs)
    zerr = [zerr_1, zerr_2]
    xerr = 1
    yerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


@raises(ValueError)
def test_errorbar_zerr_2xN_fail1():
    xs = ys = zs = np.arange(8)
    zerr = [[1], [2], [3]]
    xerr = 1
    yerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1)


def test_errorbar_zerr_capsize_gt0():
    xs = ys = zs = np.arange(3)
    zerr_1 = map(functools.partial(operator.sub, 1), xs)
    zerr_2 = map(functools.partial(operator.add, 1), xs)
    zerr = [zerr_1, zerr_2]
    xerr = 1
    yerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1, capsize=1)
    assert(True)


def test_errorbar_zerr_capsize_eq0():
    xs = ys = zs = np.arange(3)
    zerr_1 = map(functools.partial(operator.sub, 1), xs)
    zerr_2 = map(functools.partial(operator.add, 1), xs)
    zerr = [zerr_1, zerr_2]
    xerr = 1
    yerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1, capsize=0)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


def test_errorbar_zerr_capsize_lt0():
    xs = ys = zs = np.arange(3)
    zerr_1 = map(functools.partial(operator.sub, 1), xs)
    zerr_2 = map(functools.partial(operator.add, 1), xs)
    zerr = [zerr_1, zerr_2]
    xerr = 1
    yerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1, capsize=-1)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


def test_errorbar_zerr_capsize_lolims():
    xs = ys = zs = np.arange(16)
    zerr_1 = map(functools.partial(operator.sub, 1), xs)
    zerr_2 = map(functools.partial(operator.add, 2), xs)
    zerr = [zerr_1, zerr_2]
    xerr = 1
    yerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1, capsize=4, lolims=True)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)


def test_errorbar_zerr_capsize_uplims():
    xs = ys = zs = np.arange(14)
    zerr_1 = map(functools.partial(operator.sub, 3), xs)
    zerr_2 = map(functools.partial(operator.add, 1), xs)
    zerr = [zerr_1, zerr_2]
    xerr = 1
    yerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1, capsize=4, uplims=True)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)

'''
Testing the last few cases.
'''
def test_errorbar_fmt_is_none():
    xs = ys = zs = np.arange(14)
    zerr = 1
    xerr = 1
    yerr = 1

    err = ax.errorbar(xs, ys, zs, yerr=yerr, xerr=xerr,
                      zerr=zerr, errorevery=1, fmt=None)
    assert_errors_equal(xs, ys, zs, xerr, yerr, zerr, err)
